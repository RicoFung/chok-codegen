<#assign className = table.className>   
<#assign classNameFirstLower = table.classNameFirstLower>   
<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">   

<#macro mapperEl value>${r"#{"}${value}}</#macro>

<mapper namespace="${basepackage}.${subpackage}.entity.${className}">
      <!-- 自动生成id策略 -->
    <insert id="add" parameterType="${basepackage}.${subpackage}.entity.${className}" useGeneratedKeys="true" keyProperty="id">  
       	INSERT INTO ${table.sqlName} 
       	(<#list table.columns as column> ${column.sqlName}<#if column_has_next>,</#if></#list>) 
       	VALUES
       	(<#list table.columns as column> <@mapperEl column.columnNameFirstLower/><#if column_has_next>,</#if></#list>)
    </insert>  
	
	<delete id="del" parameterType="${basepackage}.${subpackage}.entity.${className}">
		DELETE FROM ${table.sqlName} 
		 WHERE <#list table.compositeIdColumns as column>${column.sqlName} = <@mapperEl column.columnNameLower/> <#if column_has_next> AND </#if> </#list>	  
	</delete>
	
	<update id="upd" parameterType="${basepackage}.${subpackage}.entity.${className}">
		UPDATE ${table.sqlName} SET
	           <#list table.notPkColumns as column>
	           ${column.sqlName} = <@mapperEl column.columnNameFirstLower/><#if column_has_next>,</#if> 
	           </#list>
         WHERE <#list table.compositeIdColumns as column>${column.sqlName} = <@mapperEl column.columnNameLower/> <#if column_has_next> AND </#if> </#list>	        
	</update>
  	
	<resultMap type="${basepackage}.${subpackage}.entity.${className}" id="result">
        <#list table.columns as column>
        <result property="${column.columnNameLower}" column="${column.sqlName}"/>
		</#list>
	</resultMap>
  	
	<sql id="columns">
		<#list table.columns as column>t.${column.sqlName}<#if column_has_next>,</#if> </#list>
	</sql>
	
	<sql id="order">
		<choose>
			<when test="sort!=null and sort!=''">
				ORDER BY tt.${r'${sort}'} ${r'${order}'}
			</when>
			<when test="multiSort!=null and (sort==null or sort=='')">
				ORDER BY <foreach collection="multiSort" index="index" item="item" separator=",">tt.${r'${item.sortName}'} ${r'${item.sortOrder}'}</foreach>  
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</sql>
	
	<sql id="page">
	</sql>
	
	<sql id="dynamicWhere">
		<where>	      				
	       <#list table.notPkColumns as column>
	       <if test="@Ognl@isNotEmpty(${column.columnNameFirstLower})"> AND ${column.sqlName} LIKE CONCAT('%',<@mapperEl column.columnNameFirstLower/>,'%')</if>
	       </#list>
	       <if test="@Ognl@isNotEmpty(search)"> AND (<#list table.notPkColumns as column>${column.sqlName} LIKE CONCAT('%',${r'#{search}'},'%')<#if column_has_next> OR </#if></#list>)</if>	
		</where>
	</sql>	
	
	<select id="get" resultMap="result">
		SELECT <include refid="columns"/> 
		  FROM ${table.sqlName} t 
		 WHERE <#list table.compositeIdColumns as column>${column.sqlName} = <@mapperEl column.columnNameLower/> <#if column_has_next> AND </#if> </#list>	  
	</select>
	
	<select id="query" resultType="list" resultMap="result">
		SELECT tt.* FROM 
		(
			SELECT <include refid="columns"/> FROM ${table.sqlName} t
			<include refid="dynamicWhere" />
		) tt
		<include refid="order" />
		<include refid="page" />
	</select>
	
	<select id="getCount" resultType="int">
		SELECT COUNT(1) FROM ${table.sqlName} t
		<include refid="dynamicWhere" />
	</select>
</mapper>  
